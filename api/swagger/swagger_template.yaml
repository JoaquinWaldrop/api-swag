swagger: "2.0"
info:
  version: "0.0.1"
  title: Api Swag App
# during dev, should point to your local machine
host: 127.0.0.1:7500
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - multipart/form-data
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/html
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: http://localhost:7500/accesstoken
    scopes:
      <% SCOPES.forEach(function(scope) { %><%- scope %>: Description here
      <% }); %>
x-volos-resources:
  OAuth2:
    credentials:
      $ref: api/swagger/credential.yaml
    provider: volos-oauth-redis
    options:
      tokenLifetime: 300000000000
      encryptionKey: <%= ENCRYPTIONKEY %>
      host: <%= REDISHOST %>
      devRequest:
        firstName: <%= DEVFIRSTNAME %>
        lastName: <%= DEVLASTNAME %>
        email: <%= DEVEMAIL %>
        userName: <%= DEVUSERNAME %>
        scopes: <%= DEVSCOPES %>
      appRequest:
        name: <%= APPNAME %>
        scopes: <%= APPSCOPES %>
      port: <%= REDISPORT %>
      validGrantTypes:
        - password
        - client_credentials
        - refresh_token
      passwordCheck:
        helper: volos
        function: passwordCheck
      beforeCreateToken:
        helper: volos
        function: beforeCreate
      tokenPaths:  # These will be added to your paths section for you
        authorize: /authorize
        token: /accesstoken
        invalidate: /invalidate
        refresh: /refresh
paths:
  /verifyToken:
    x-swagger-router-controller: login
    get:
      description: Verify access token
      # used as the method name of the controller
      operationId: verifyToken
      parameters:
        - name: Authorization
          in: header
          description: Access Token to Verify
          required: true
          type: string
        - name: scopes
          in: query
          description: Scopes to verify
          type: string
      responses:
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /refreshToken:
    x-swagger-router-controller: login
    post:
      description: Refresh token
      # used as the method name of the controller
      operationId: refreshToken
      parameters:
        - name: refreshToken
          in: body
          description: Access Token to Verify
          required: true
          schema:
            required:
              - refresh_token
            properties:
              refresh_token:
                type: string
      responses:
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: login
    post:
      description: Recibe email and password and generate the access token
      # used as the method name of the controller
      operationId: login
      parameters:
        - name: email
          in: formData
          description: Email for application
          required: true
          type: string
        - name: password
          in: formData
          description: Password for application
          required: true
          type: string
      responses:
        "200":
          description: user response
          schema:
            $ref: '#/definitions/responseObject'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    get:
      description: Return a user
      # used as the method name of the controller
      operationId: show
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          type: integer
      security:
        - OAuth2:
          - scope2
      responses:
        "200":
          description: user response
          schema:
            $ref: '#/definitions/responseObject'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update the user
      # used as the method name of the controller
      operationId: update
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          type: string
        - name: firstName
          in: formData
          description: Username for application
          required: true
          type: string
        - name: lastName
          in: formData
          description: Username for application
          required: true
          type: string
        - name: email
          in: formData
          description: Email for application
          required: true
          type: string
        - name: password
          in: formData
          description: Password for application
          required: true
          type: string
      responses:
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: delete a user
      # used as the method name of the controller
      operationId: delete
      parameters:
        - name: id
          in: path
          description: The id of the user
          required: true
          type: string
      responses:
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    get:
      description: Return all users
      # used as the method name of the controller
      operationId: index
      responses:
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: create a user
      # used as the method name of the controller
      operationId: create
      parameters:
        - name: firstName
          in: formData
          description: Username for application
          required: true
          type: string
        - name: lastName
          in: formData
          description: Username for application
          required: true
          type: string
        - name: email
          in: formData
          description: Email for application
          required: true
          type: string
        - name: password
          in: formData
          description: Password for application
          required: true
          type: string
      responses:
        "201":
          description: user response
          schema:
            $ref: '#/definitions/responseObject'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  login:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  responseObject:
    type: object
